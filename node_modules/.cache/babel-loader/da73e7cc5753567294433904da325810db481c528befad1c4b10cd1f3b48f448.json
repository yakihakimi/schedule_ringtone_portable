{"ast":null,"code":"var _jsxFileName = \"C:\\\\devops\\\\schedule_ringtone\\\\src\\\\components\\\\RingtoneList.tsx\",\n  _s = $RefreshSig$();\n// Rules applied\nimport React, { useState, useRef, useEffect } from 'react';\nimport ringtoneService, { API_BASE_URL } from '../services/ringtoneService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RingtoneList = ({\n  ringtones,\n  onRingtonesUpdated,\n  onEditRingtone,\n  onDeleteLocalRingtone\n}) => {\n  _s();\n  const [playingId, setPlayingId] = useState(null);\n  const [error, setError] = useState(null);\n  const [backendRingtones, setBackendRingtones] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const audioRefs = useRef({});\n\n  // Load ringtones from backend\n  useEffect(() => {\n    console.log('🔄 RingtoneList: Loading backend ringtones...');\n    loadBackendRingtones();\n  }, []);\n  const loadBackendRingtones = async () => {\n    try {\n      console.log('🔄 RingtoneList: Starting to load backend ringtones...');\n      setIsLoading(true);\n      setError(null);\n      const result = await ringtoneService.listRingtones();\n      console.log('🔄 RingtoneList: Backend response:', result);\n      if (result.success && result.ringtones) {\n        setBackendRingtones(result.ringtones);\n        console.log('✅ RingtoneList: Successfully loaded backend ringtones:', result.ringtones);\n        console.log('✅ RingtoneList: Count:', result.ringtones.length);\n      } else {\n        console.warn('⚠️ RingtoneList: Backend response indicates failure:', result);\n        setBackendRingtones([]);\n        if (result.error) {\n          setError(`Failed to load ringtones: ${result.error}`);\n        }\n      }\n    } catch (error) {\n      console.error('❌ RingtoneList: Error loading ringtones from backend:', error);\n      setError(`Error loading ringtones: ${error}`);\n      setBackendRingtones([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Helper function to sort ringtones by creation time (newest first)\n  const sortRingtonesByTime = ringtones => {\n    return ringtones.sort((a, b) => {\n      const timeA = new Date(a.created).getTime();\n      const timeB = new Date(b.created).getTime();\n      return timeB - timeA; // Descending order (newest first)\n    });\n  };\n\n  // Helper function to group ringtones by format\n  const groupRingtonesByFormat = ringtones => {\n    const grouped = {\n      mp3: [],\n      wav: []\n    };\n    ringtones.forEach(ringtone => {\n      if (ringtone.format === 'mp3') {\n        grouped.mp3.push(ringtone);\n      } else if (ringtone.format === 'wav') {\n        grouped.wav.push(ringtone);\n      }\n    });\n\n    // Sort each group by time\n    grouped.mp3 = sortRingtonesByTime(grouped.mp3);\n    grouped.wav = sortRingtonesByTime(grouped.wav);\n    return grouped;\n  };\n\n  // Helper function to convert RingtoneInfo to AudioFile format\n  const convertToAudioFile = ringtone => {\n    return {\n      id: ringtone.id,\n      name: ringtone.original_name || ringtone.name,\n      url: `${API_BASE_URL}/ringtones/${ringtone.folder || 'wav_ringtones'}/${ringtone.name}`,\n      duration: ringtone.duration || 0,\n      file: null,\n      // We don't have the actual file object\n      type: 'ringtone',\n      startTime: ringtone.start_time,\n      endTime: ringtone.end_time\n    };\n  };\n\n  // Helper function to filter ringtones based on search query\n  const filterRingtones = (ringtones, query) => {\n    if (!query.trim()) {\n      return ringtones;\n    }\n    const lowercaseQuery = query.toLowerCase().trim();\n    return ringtones.filter(ringtone => {\n      const name = (ringtone.original_name || ringtone.name).toLowerCase();\n      return name.includes(lowercaseQuery);\n    });\n  };\n\n  // Helper function to filter local ringtones based on search query\n  const filterLocalRingtones = (ringtones, query) => {\n    if (!query.trim()) {\n      return ringtones;\n    }\n    const lowercaseQuery = query.toLowerCase().trim();\n    return ringtones.filter(ringtone => {\n      const name = ringtone.name.toLowerCase();\n      return name.includes(lowercaseQuery);\n    });\n  };\n  const handlePlay = ringtone => {\n    try {\n      // Stop any currently playing audio\n      if (playingId && audioRefs.current[playingId]) {\n        audioRefs.current[playingId].pause();\n        audioRefs.current[playingId].currentTime = 0;\n      }\n\n      // Play the selected ringtone\n      const audio = audioRefs.current[ringtone.id];\n      if (audio) {\n        audio.play();\n        setPlayingId(ringtone.id);\n\n        // Reset when audio ends\n        audio.onended = () => {\n          setPlayingId(null);\n        };\n      }\n    } catch (error) {\n      console.error('Error playing ringtone:', error);\n      setError(`Error playing ringtone: ${error}`);\n    }\n  };\n  const handleStop = ringtone => {\n    try {\n      const audio = audioRefs.current[ringtone.id];\n      if (audio) {\n        audio.pause();\n        audio.currentTime = 0;\n        setPlayingId(null);\n      }\n    } catch (error) {\n      console.error('Error stopping ringtone:', error);\n      setError(`Error stopping ringtone: ${error}`);\n    }\n  };\n  const handleDownload = async ringtone => {\n    try {\n      // Try to download from backend first\n      const backendRingtone = backendRingtones.find(br => br.name === ringtone.name);\n      if (backendRingtone) {\n        await ringtoneService.downloadRingtone(backendRingtone.name, backendRingtone.folder);\n        return;\n      }\n\n      // Fallback to local download\n      const link = document.createElement('a');\n      link.href = ringtone.url;\n      link.download = ringtone.name;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } catch (error) {\n      console.error('Error downloading ringtone:', error);\n      setError(`Error downloading ringtone: ${error}`);\n    }\n  };\n  const handleEdit = ringtone => {\n    try {\n      console.log('🔄 Editing ringtone:', ringtone.name);\n      if (onEditRingtone) {\n        onEditRingtone(ringtone);\n      }\n    } catch (error) {\n      console.error('Error editing ringtone:', error);\n      setError(`Error editing ringtone: ${error}`);\n    }\n  };\n  const handleDelete = async ringtone => {\n    try {\n      const result = await ringtoneService.deleteRingtone(ringtone.name, ringtone.folder);\n      if (result.success) {\n        console.log('Ringtone deleted successfully:', ringtone.name);\n        await loadBackendRingtones(); // Reload the list\n        if (onRingtonesUpdated) {\n          onRingtonesUpdated();\n        }\n      } else {\n        setError(`Failed to delete ringtone: ${result.error}`);\n      }\n    } catch (error) {\n      console.error('Error deleting ringtone:', error);\n      setError(`Error deleting ringtone: ${error}`);\n    }\n  };\n  const handleDeleteLocal = ringtone => {\n    try {\n      console.log('🗑️ Deleting local ringtone:', ringtone.name);\n      if (onDeleteLocalRingtone) {\n        onDeleteLocalRingtone(ringtone.id);\n      }\n    } catch (error) {\n      console.error('Error deleting local ringtone:', error);\n      setError(`Error deleting local ringtone: ${error}`);\n    }\n  };\n\n  // Render a single ringtone item\n  const renderRingtoneItem = (ringtone, isLocal = false) => {\n    var _format;\n    const isLocalRingtone = isLocal;\n    const ringtoneData = isLocalRingtone ? ringtone : ringtone;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `ringtone-item ${isLocalRingtone ? 'local' : 'saved'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ringtone-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: ringtoneData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Duration: \", Math.floor(ringtoneData.duration || 0), \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), isLocalRingtone && ringtoneData.startTime !== undefined && ringtoneData.endTime !== undefined && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"From: \", Math.floor(ringtoneData.startTime), \"s - To: \", Math.floor(ringtoneData.endTime), \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), !isLocalRingtone && ringtoneData.start_time !== undefined && ringtoneData.end_time !== undefined && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"From: \", Math.floor(ringtoneData.start_time), \"s - To: \", Math.floor(ringtoneData.end_time), \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), !isLocalRingtone && ringtoneData.format && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Format: \", (_format = ringtoneData.format) === null || _format === void 0 ? void 0 : _format.toUpperCase()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ringtone-controls\",\n        children: [playingId === ringtoneData.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"stop-button\",\n          onClick: () => handleStop(ringtoneData),\n          children: \"\\u23F9\\uFE0F Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"play-button\",\n          onClick: () => handlePlay(ringtoneData),\n          children: \"\\u25B6\\uFE0F Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-button\",\n          onClick: () => handleEdit(isLocalRingtone ? ringtoneData : convertToAudioFile(ringtoneData)),\n          title: \"Edit this ringtone\",\n          children: \"\\u270F\\uFE0F Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"download-button\",\n          onClick: () => handleDownload(ringtoneData),\n          children: \"\\uD83D\\uDCBE Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), isLocalRingtone ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-button\",\n          onClick: () => handleDeleteLocal(ringtoneData),\n          title: \"Delete this ringtone\",\n          children: \"\\uD83D\\uDDD1\\uFE0F Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-button\",\n          onClick: () => handleDelete(ringtoneData),\n          title: \"Delete this ringtone\",\n          children: \"\\uD83D\\uDDD1\\uFE0F Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: el => {\n          if (el) audioRefs.current[ringtoneData.id] = el;\n        },\n        src: isLocalRingtone ? ringtoneData.url : `${API_BASE_URL}/ringtones/${ringtoneData.folder || 'wav_ringtones'}/${ringtoneData.name}`,\n        preload: \"metadata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, ringtoneData.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Check if we have any ringtones to display\n  const hasAnyRingtones = ringtones.length > 0 || backendRingtones.length > 0;\n\n  // Group and sort backend ringtones by format\n  const groupedBackendRingtones = groupRingtonesByFormat(backendRingtones);\n\n  // Filter ringtones based on search query\n  const filteredMp3Ringtones = filterRingtones(groupedBackendRingtones.mp3, searchQuery);\n  const filteredWavRingtones = filterRingtones(groupedBackendRingtones.wav, searchQuery);\n  const filteredLocalRingtones = filterLocalRingtones(ringtones, searchQuery);\n\n  // Check if we have search results\n  const hasSearchResults = filteredMp3Ringtones.length > 0 || filteredWavRingtones.length > 0 || filteredLocalRingtones.length > 0;\n  if (!hasAnyRingtones && !isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ringtone-list empty\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDCF1 Your Ringtones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No ringtones created yet. Upload an audio file and create your first ringtone!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"refresh-button\",\n        onClick: loadBackendRingtones,\n        disabled: isLoading,\n        children: \"\\uD83D\\uDD04 Refresh Ringtones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Show no search results message if searching but no results found\n  if (searchQuery && !hasSearchResults && !isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ringtone-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDCF1 Your Ringtones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\uD83D\\uDD0D Search ringtones...\",\n            value: searchQuery,\n            onChange: e => setSearchQuery(e.target.value),\n            className: \"search-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), searchQuery && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"clear-search-button\",\n            onClick: () => setSearchQuery(''),\n            title: \"Clear search\",\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"search-info\",\n          children: [\"Showing results for \\\"\", searchQuery, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD83D\\uDD0D No ringtones found matching \\\"\", searchQuery, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-search-button\",\n          onClick: () => setSearchQuery(''),\n          children: \"Clear Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ringtone-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCF1 Your Ringtones\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uD83D\\uDD0D Search ringtones...\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value),\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), searchQuery && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-search-button\",\n          onClick: () => setSearchQuery(''),\n          title: \"Clear search\",\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), searchQuery && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"search-info\",\n        children: [\"Showing results for \\\"\", searchQuery, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this), filteredMp3Ringtones.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ringtone-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uD83C\\uDFB5 MP3 Ringtones (\", filteredMp3Ringtones.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }, this), filteredMp3Ringtones.map(ringtone => renderRingtoneItem(ringtone, false))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 9\n    }, this), filteredWavRingtones.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ringtone-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uD83C\\uDFB6 WAV Ringtones (\", filteredWavRingtones.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 11\n      }, this), filteredWavRingtones.map(ringtone => renderRingtoneItem(ringtone, false))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 9\n    }, this), filteredLocalRingtones.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ringtone-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uD83C\\uDD95 All Created Ringtones (\", filteredLocalRingtones.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 11\n      }, this), filteredLocalRingtones.map(ringtone => renderRingtoneItem(ringtone, true))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u274C \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError(null),\n        children: \"Dismiss\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"refresh-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"refresh-button\",\n        onClick: loadBackendRingtones,\n        disabled: isLoading,\n        children: \"\\uD83D\\uDD04 Refresh Ringtones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"refresh-info\",\n        children: \"Click to refresh the list of saved ringtones from the backend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 388,\n    columnNumber: 5\n  }, this);\n};\n_s(RingtoneList, \"XVVJmdu4nRlrfMcDSXp8obrJ2pw=\");\n_c = RingtoneList;\nexport default RingtoneList;\nvar _c;\n$RefreshReg$(_c, \"RingtoneList\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ringtoneService","API_BASE_URL","jsxDEV","_jsxDEV","RingtoneList","ringtones","onRingtonesUpdated","onEditRingtone","onDeleteLocalRingtone","_s","playingId","setPlayingId","error","setError","backendRingtones","setBackendRingtones","isLoading","setIsLoading","searchQuery","setSearchQuery","audioRefs","console","log","loadBackendRingtones","result","listRingtones","success","length","warn","sortRingtonesByTime","sort","a","b","timeA","Date","created","getTime","timeB","groupRingtonesByFormat","grouped","mp3","wav","forEach","ringtone","format","push","convertToAudioFile","id","name","original_name","url","folder","duration","file","type","startTime","start_time","endTime","end_time","filterRingtones","query","trim","lowercaseQuery","toLowerCase","filter","includes","filterLocalRingtones","handlePlay","current","pause","currentTime","audio","play","onended","handleStop","handleDownload","backendRingtone","find","br","downloadRingtone","link","document","createElement","href","download","body","appendChild","click","removeChild","handleEdit","handleDelete","deleteRingtone","handleDeleteLocal","renderRingtoneItem","isLocal","_format","isLocalRingtone","ringtoneData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Math","floor","undefined","toUpperCase","onClick","title","ref","el","src","preload","hasAnyRingtones","groupedBackendRingtones","filteredMp3Ringtones","filteredWavRingtones","filteredLocalRingtones","hasSearchResults","disabled","placeholder","value","onChange","e","target","map","_c","$RefreshReg$"],"sources":["C:/devops/schedule_ringtone/src/components/RingtoneList.tsx"],"sourcesContent":["// Rules applied\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { AudioFile } from '../types/audio';\r\nimport ringtoneService, { RingtoneInfo, API_BASE_URL } from '../services/ringtoneService';\r\n\r\ninterface RingtoneListProps {\r\n  ringtones: AudioFile[];\r\n  onRingtonesUpdated?: () => void;\r\n  onEditRingtone?: (ringtone: AudioFile) => void; // Add edit callback prop\r\n  onDeleteLocalRingtone?: (id: string) => void; // Add delete callback prop for local ringtones\r\n}\r\n\r\nconst RingtoneList: React.FC<RingtoneListProps> = ({ ringtones, onRingtonesUpdated, onEditRingtone, onDeleteLocalRingtone }) => {\r\n  const [playingId, setPlayingId] = useState<string | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [backendRingtones, setBackendRingtones] = useState<RingtoneInfo[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState<string>('');\r\n  const audioRefs = useRef<{ [key: string]: HTMLAudioElement }>({});\r\n\r\n  // Load ringtones from backend\r\n  useEffect(() => {\r\n    console.log('🔄 RingtoneList: Loading backend ringtones...');\r\n    loadBackendRingtones();\r\n  }, []);\r\n\r\n  const loadBackendRingtones = async () => {\r\n    try {\r\n      console.log('🔄 RingtoneList: Starting to load backend ringtones...');\r\n      setIsLoading(true);\r\n      setError(null);\r\n      \r\n      const result = await ringtoneService.listRingtones();\r\n      console.log('🔄 RingtoneList: Backend response:', result);\r\n      \r\n      if (result.success && result.ringtones) {\r\n        setBackendRingtones(result.ringtones);\r\n        console.log('✅ RingtoneList: Successfully loaded backend ringtones:', result.ringtones);\r\n        console.log('✅ RingtoneList: Count:', result.ringtones.length);\r\n      } else {\r\n        console.warn('⚠️ RingtoneList: Backend response indicates failure:', result);\r\n        setBackendRingtones([]);\r\n        if (result.error) {\r\n          setError(`Failed to load ringtones: ${result.error}`);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ RingtoneList: Error loading ringtones from backend:', error);\r\n      setError(`Error loading ringtones: ${error}`);\r\n      setBackendRingtones([]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Helper function to sort ringtones by creation time (newest first)\r\n  const sortRingtonesByTime = (ringtones: RingtoneInfo[]) => {\r\n    return ringtones.sort((a, b) => {\r\n      const timeA = new Date(a.created).getTime();\r\n      const timeB = new Date(b.created).getTime();\r\n      return timeB - timeA; // Descending order (newest first)\r\n    });\r\n  };\r\n\r\n  // Helper function to group ringtones by format\r\n  const groupRingtonesByFormat = (ringtones: RingtoneInfo[]) => {\r\n    const grouped = {\r\n      mp3: [] as RingtoneInfo[],\r\n      wav: [] as RingtoneInfo[]\r\n    };\r\n\r\n    ringtones.forEach(ringtone => {\r\n      if (ringtone.format === 'mp3') {\r\n        grouped.mp3.push(ringtone);\r\n      } else if (ringtone.format === 'wav') {\r\n        grouped.wav.push(ringtone);\r\n      }\r\n    });\r\n\r\n    // Sort each group by time\r\n    grouped.mp3 = sortRingtonesByTime(grouped.mp3);\r\n    grouped.wav = sortRingtonesByTime(grouped.wav);\r\n\r\n    return grouped;\r\n  };\r\n\r\n  // Helper function to convert RingtoneInfo to AudioFile format\r\n  const convertToAudioFile = (ringtone: RingtoneInfo): AudioFile => {\r\n    return {\r\n      id: ringtone.id,\r\n      name: ringtone.original_name || ringtone.name,\r\n      url: `${API_BASE_URL}/ringtones/${ringtone.folder || 'wav_ringtones'}/${ringtone.name}`,\r\n      duration: ringtone.duration || 0,\r\n      file: null as any, // We don't have the actual file object\r\n      type: 'ringtone' as const,\r\n      startTime: ringtone.start_time,\r\n      endTime: ringtone.end_time\r\n    };\r\n  };\r\n\r\n  // Helper function to filter ringtones based on search query\r\n  const filterRingtones = (ringtones: RingtoneInfo[], query: string): RingtoneInfo[] => {\r\n    if (!query.trim()) {\r\n      return ringtones;\r\n    }\r\n    \r\n    const lowercaseQuery = query.toLowerCase().trim();\r\n    return ringtones.filter(ringtone => {\r\n      const name = (ringtone.original_name || ringtone.name).toLowerCase();\r\n      return name.includes(lowercaseQuery);\r\n    });\r\n  };\r\n\r\n  // Helper function to filter local ringtones based on search query\r\n  const filterLocalRingtones = (ringtones: AudioFile[], query: string): AudioFile[] => {\r\n    if (!query.trim()) {\r\n      return ringtones;\r\n    }\r\n    \r\n    const lowercaseQuery = query.toLowerCase().trim();\r\n    return ringtones.filter(ringtone => {\r\n      const name = ringtone.name.toLowerCase();\r\n      return name.includes(lowercaseQuery);\r\n    });\r\n  };\r\n\r\n  const handlePlay = (ringtone: AudioFile) => {\r\n    try {\r\n      // Stop any currently playing audio\r\n      if (playingId && audioRefs.current[playingId]) {\r\n        audioRefs.current[playingId].pause();\r\n        audioRefs.current[playingId].currentTime = 0;\r\n      }\r\n\r\n      // Play the selected ringtone\r\n      const audio = audioRefs.current[ringtone.id];\r\n      if (audio) {\r\n        audio.play();\r\n        setPlayingId(ringtone.id);\r\n        \r\n        // Reset when audio ends\r\n        audio.onended = () => {\r\n          setPlayingId(null);\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error('Error playing ringtone:', error);\r\n      setError(`Error playing ringtone: ${error}`);\r\n    }\r\n  };\r\n\r\n  const handleStop = (ringtone: AudioFile) => {\r\n    try {\r\n      const audio = audioRefs.current[ringtone.id];\r\n      if (audio) {\r\n        audio.pause();\r\n        audio.currentTime = 0;\r\n        setPlayingId(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error stopping ringtone:', error);\r\n      setError(`Error stopping ringtone: ${error}`);\r\n    }\r\n  };\r\n\r\n  const handleDownload = async (ringtone: AudioFile) => {\r\n    try {\r\n      // Try to download from backend first\r\n      const backendRingtone = backendRingtones.find(br => br.name === ringtone.name);\r\n      if (backendRingtone) {\r\n        await ringtoneService.downloadRingtone(backendRingtone.name, backendRingtone.folder);\r\n        return;\r\n      }\r\n      \r\n      // Fallback to local download\r\n      const link = document.createElement('a');\r\n      link.href = ringtone.url;\r\n      link.download = ringtone.name;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } catch (error) {\r\n      console.error('Error downloading ringtone:', error);\r\n      setError(`Error downloading ringtone: ${error}`);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (ringtone: AudioFile) => {\r\n    try {\r\n      console.log('🔄 Editing ringtone:', ringtone.name);\r\n      if (onEditRingtone) {\r\n        onEditRingtone(ringtone);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error editing ringtone:', error);\r\n      setError(`Error editing ringtone: ${error}`);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (ringtone: RingtoneInfo) => {\r\n    try {\r\n      const result = await ringtoneService.deleteRingtone(ringtone.name, ringtone.folder);\r\n      if (result.success) {\r\n        console.log('Ringtone deleted successfully:', ringtone.name);\r\n        await loadBackendRingtones(); // Reload the list\r\n        if (onRingtonesUpdated) {\r\n          onRingtonesUpdated();\r\n        }\r\n      } else {\r\n        setError(`Failed to delete ringtone: ${result.error}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting ringtone:', error);\r\n      setError(`Error deleting ringtone: ${error}`);\r\n    }\r\n  };\r\n\r\n  const handleDeleteLocal = (ringtone: AudioFile) => {\r\n    try {\r\n      console.log('🗑️ Deleting local ringtone:', ringtone.name);\r\n      if (onDeleteLocalRingtone) {\r\n        onDeleteLocalRingtone(ringtone.id);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting local ringtone:', error);\r\n      setError(`Error deleting local ringtone: ${error}`);\r\n    }\r\n  };\r\n\r\n  // Render a single ringtone item\r\n  const renderRingtoneItem = (ringtone: RingtoneInfo | AudioFile, isLocal: boolean = false) => {\r\n    const isLocalRingtone = isLocal;\r\n    const ringtoneData = isLocalRingtone ? ringtone as AudioFile : ringtone as RingtoneInfo;\r\n    \r\n    return (\r\n      <div key={ringtoneData.id} className={`ringtone-item ${isLocalRingtone ? 'local' : 'saved'}`}>\r\n        <div className=\"ringtone-info\">\r\n          <h4>{ringtoneData.name}</h4>\r\n          <p>Duration: {Math.floor(ringtoneData.duration || 0)}s</p>\r\n          {isLocalRingtone && (ringtoneData as AudioFile).startTime !== undefined && (ringtoneData as AudioFile).endTime !== undefined && (\r\n            <p>From: {Math.floor((ringtoneData as AudioFile).startTime!)}s - To: {Math.floor((ringtoneData as AudioFile).endTime!)}s</p>\r\n          )}\r\n          {!isLocalRingtone && (ringtoneData as RingtoneInfo).start_time !== undefined && (ringtoneData as RingtoneInfo).end_time !== undefined && (\r\n            <p>From: {Math.floor((ringtoneData as RingtoneInfo).start_time!)}s - To: {Math.floor((ringtoneData as RingtoneInfo).end_time!)}s</p>\r\n          )}\r\n          {!isLocalRingtone && (ringtoneData as RingtoneInfo).format && (\r\n            <p>Format: {(ringtoneData as RingtoneInfo).format?.toUpperCase()}</p>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"ringtone-controls\">\r\n          {playingId === ringtoneData.id ? (\r\n            <button \r\n              className=\"stop-button\"\r\n              onClick={() => handleStop(ringtoneData as AudioFile)}\r\n            >\r\n              ⏹️ Stop\r\n            </button>\r\n          ) : (\r\n            <button \r\n              className=\"play-button\"\r\n              onClick={() => handlePlay(ringtoneData as AudioFile)}\r\n            >\r\n              ▶️ Play\r\n            </button>\r\n          )}\r\n          \r\n          <button \r\n            className=\"edit-button\"\r\n            onClick={() => handleEdit(isLocalRingtone ? ringtoneData as AudioFile : convertToAudioFile(ringtoneData as RingtoneInfo))}\r\n            title=\"Edit this ringtone\"\r\n          >\r\n            ✏️ Edit\r\n          </button>\r\n          \r\n          <button \r\n            className=\"download-button\"\r\n            onClick={() => handleDownload(ringtoneData as AudioFile)}\r\n          >\r\n            💾 Download\r\n          </button>\r\n\r\n          {isLocalRingtone ? (\r\n            <button \r\n              className=\"delete-button\"\r\n              onClick={() => handleDeleteLocal(ringtoneData as AudioFile)}\r\n              title=\"Delete this ringtone\"\r\n            >\r\n              🗑️ Delete\r\n            </button>\r\n          ) : (\r\n            <button \r\n              className=\"delete-button\"\r\n              onClick={() => handleDelete(ringtoneData as RingtoneInfo)}\r\n              title=\"Delete this ringtone\"\r\n            >\r\n              🗑️ Delete\r\n            </button>\r\n          )}\r\n        </div>\r\n        \r\n        <audio\r\n          ref={(el) => {\r\n            if (el) audioRefs.current[ringtoneData.id] = el;\r\n          }}\r\n          src={isLocalRingtone ? (ringtoneData as AudioFile).url : `${API_BASE_URL}/ringtones/${(ringtoneData as RingtoneInfo).folder || 'wav_ringtones'}/${(ringtoneData as RingtoneInfo).name}`}\r\n          preload=\"metadata\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Check if we have any ringtones to display\r\n  const hasAnyRingtones = ringtones.length > 0 || backendRingtones.length > 0;\r\n  \r\n  // Group and sort backend ringtones by format\r\n  const groupedBackendRingtones = groupRingtonesByFormat(backendRingtones);\r\n  \r\n  // Filter ringtones based on search query\r\n  const filteredMp3Ringtones = filterRingtones(groupedBackendRingtones.mp3, searchQuery);\r\n  const filteredWavRingtones = filterRingtones(groupedBackendRingtones.wav, searchQuery);\r\n  const filteredLocalRingtones = filterLocalRingtones(ringtones, searchQuery);\r\n  \r\n  // Check if we have search results\r\n  const hasSearchResults = filteredMp3Ringtones.length > 0 || filteredWavRingtones.length > 0 || filteredLocalRingtones.length > 0;\r\n\r\n  if (!hasAnyRingtones && !isLoading) {\r\n    return (\r\n      <div className=\"ringtone-list empty\">\r\n        <h2>📱 Your Ringtones</h2>\r\n        <p>No ringtones created yet. Upload an audio file and create your first ringtone!</p>\r\n        <button \r\n          className=\"refresh-button\"\r\n          onClick={loadBackendRingtones}\r\n          disabled={isLoading}\r\n        >\r\n          🔄 Refresh Ringtones\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Show no search results message if searching but no results found\r\n  if (searchQuery && !hasSearchResults && !isLoading) {\r\n    return (\r\n      <div className=\"ringtone-list\">\r\n        <h2>📱 Your Ringtones</h2>\r\n        \r\n        {/* Search Bar */}\r\n        <div className=\"search-section\">\r\n          <div className=\"search-input-container\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"🔍 Search ringtones...\"\r\n              value={searchQuery}\r\n              onChange={(e) => setSearchQuery(e.target.value)}\r\n              className=\"search-input\"\r\n            />\r\n            {searchQuery && (\r\n              <button\r\n                className=\"clear-search-button\"\r\n                onClick={() => setSearchQuery('')}\r\n                title=\"Clear search\"\r\n              >\r\n                ✕\r\n              </button>\r\n            )}\r\n          </div>\r\n          <p className=\"search-info\">\r\n            Showing results for \"{searchQuery}\"\r\n          </p>\r\n        </div>\r\n        \r\n        <div className=\"no-results\">\r\n          <p>🔍 No ringtones found matching \"{searchQuery}\"</p>\r\n          <button \r\n            className=\"clear-search-button\"\r\n            onClick={() => setSearchQuery('')}\r\n          >\r\n            Clear Search\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"ringtone-list\">\r\n      <h2>📱 Your Ringtones</h2>\r\n      \r\n      {/* Search Bar */}\r\n      <div className=\"search-section\">\r\n        <div className=\"search-input-container\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"🔍 Search ringtones...\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n            className=\"search-input\"\r\n          />\r\n          {searchQuery && (\r\n            <button\r\n              className=\"clear-search-button\"\r\n              onClick={() => setSearchQuery('')}\r\n              title=\"Clear search\"\r\n            >\r\n              ✕\r\n            </button>\r\n          )}\r\n        </div>\r\n        {searchQuery && (\r\n          <p className=\"search-info\">\r\n            Showing results for \"{searchQuery}\"\r\n          </p>\r\n        )}\r\n      </div>\r\n      \r\n      {/* MP3 Ringtones Section */}\r\n      {filteredMp3Ringtones.length > 0 && (\r\n        <div className=\"ringtone-section\">\r\n          <h3>🎵 MP3 Ringtones ({filteredMp3Ringtones.length})</h3>\r\n          {filteredMp3Ringtones.map((ringtone) => renderRingtoneItem(ringtone, false))}\r\n        </div>\r\n      )}\r\n\r\n      {/* WAV Ringtones Section */}\r\n      {filteredWavRingtones.length > 0 && (\r\n        <div className=\"ringtone-section\">\r\n          <h3>🎶 WAV Ringtones ({filteredWavRingtones.length})</h3>\r\n          {filteredWavRingtones.map((ringtone) => renderRingtoneItem(ringtone, false))}\r\n        </div>\r\n      )}\r\n\r\n      {/* All Created Ringtones */}\r\n      {filteredLocalRingtones.length > 0 && (\r\n        <div className=\"ringtone-section\">\r\n          <h3>🆕 All Created Ringtones ({filteredLocalRingtones.length})</h3>\r\n          {filteredLocalRingtones.map((ringtone) => renderRingtoneItem(ringtone, true))}\r\n        </div>\r\n      )}\r\n      \r\n      {error && (\r\n        <div className=\"error-message\">\r\n          <p>❌ {error}</p>\r\n          <button onClick={() => setError(null)}>Dismiss</button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"refresh-section\">\r\n        <button \r\n          className=\"refresh-button\"\r\n          onClick={loadBackendRingtones}\r\n          disabled={isLoading}\r\n        >\r\n          🔄 Refresh Ringtones\r\n        </button>\r\n        <p className=\"refresh-info\">Click to refresh the list of saved ringtones from the backend</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RingtoneList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}